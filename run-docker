#!/bin/bash

set -e

build_only=
user=$(whoami)

ARGS=$(getopt -o "bdpu:" -l "build-only,debug,privileged,push,user:" -n "$(basename $0)" -- "$@")

eval set -- $ARGS

while [ $# -gt 0 ]
do
	case $1 in
	-b|--build-only)
		build_only=1
		shift;;
	-d|--debug)
		set -x
		shift;;
	-p|--privileged)
		privileged=1
		shift;;
	--push)
		push=1
		shift;;
	-u|--user)
		user=$2
		shift 2;;
	--)
		shift
		break;;
	esac
done

if [ $# = 0 ]; then
	echo "specify the base image to run" >&2
	exit 1
fi

from=$1
shift

if [ $# = 0 ]; then
	set /bin/bash
fi

# the directory path where this script is located
this_dir=$(dirname $(realpath $0))
dockerfile=$this_dir/Dockerfile
tag=masahir0y/my-$from
from=masahir0y/$from

if docker run $from /bin/sh -c 'command -v gosu' >/dev/null; then
	dockerfile=$dockerfile.gosu
fi

docker image build -f $dockerfile -t $tag --build-arg FROM=$from --build-arg USER=$user $this_dir

if [ "$push" = 1 ]; then
	docker push $tag
fi

if [ "$build_only" = 1 ]; then
	echo "Building '$tag' done"
	exit 0
fi

DOCKER_RUN_OPT="-t --rm"

if [ "$privileged" = 1 ]; then
	DOCKER_RUN_OPT+=" --privileged"
fi

case $(basename $1) in
*sh)
	DOCKER_RUN_OPT+=" -i"
	;;
esac

container_home=/home/$user

mount_dirs="priv ref tools workspace"

for d in $mount_dirs
do
	# Mount useful directories if they exist in your home directory.
	# --volume=HOST_DIR:CONTAINER-DI
	if [ -d $HOME/$d ]; then
		DOCKER_RUN_OPT+=" --mount type=bind,src=$HOME/$d,dst=$container_home/$d"
	fi
done

# This is needed for running 'strace' in a docker
DOCKER_RUN_OPT+=" --security-opt seccomp:unconfined"

# For GUI
DOCKER_RUN_OPT+=" --mount type=bind,src=/tmp/.X11-unix,dst=/tmp/.X11-unix -e DISPLAY=unix$DISPLAY"

if [[ $dockerfile = *.gosu ]]; then
	exec docker container run $DOCKER_RUN_OPT $tag --user=$user --uid=$(id -u) --gid=$(id -g) -- "$@"
else
	exec docker container run $DOCKER_RUN_OPT $tag "$@"
fi
