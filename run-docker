#!/bin/bash

set -e

build_only=
user=$(whoami)
run_args=(
	--rm
	# This is needed for running 'strace' in a docker
	--security-opt seccomp:unconfined
	# For GUI
	--mount type=bind,src=/tmp/.X11-unix,dst=/tmp/.X11-unix -e DISPLAY=unix$DISPLAY
)

ARGS=$(getopt -o "bdpu:" -l "build-only,debug,privileged,push,user:" -n "$(basename $0)" -- "$@")

eval set -- $ARGS

while [ $# -gt 0 ]
do
	case $1 in
	-b|--build-only)
		build_only=1
		shift;;
	-d|--debug)
		set -x
		shift;;
	-p|--privileged)
		run_args+=(--privileged)
		shift;;
	--push)
		push=1
		shift;;
	-u|--user)
		user=$2
		shift 2;;
	--)
		shift
		break;;
	esac
done

if [ $# = 0 ]; then
	echo "specify the base image to run" >&2
	exit 1
fi

from=$1
shift

if [ $# = 0 ]; then
	set /bin/bash
	run_args+=(-i -t)
fi

# the directory path where this script is located
this_dir=$(dirname $(realpath $0))
dockerfile=$this_dir/Dockerfile
tag=masahir0y/my-$from
from=masahir0y/$from

build_args=(
	--build-arg FROM=$from
)

if docker run $from /bin/sh -c 'command -v gosu' >/dev/null; then
	dockerfile=$dockerfile.gosu
else
	build_args+=(--build-arg USER=$user)
fi

docker image build -f $dockerfile -t $tag ${build_args[@]} $this_dir

if [ "$push" = 1 ]; then
	docker push $tag
fi

if [ "$build_only" = 1 ]; then
	echo "Building '$tag' done"
	exit 0
fi

container_home=/home/$user

for d in priv ref tools workspace
do
	# Mount useful directories if they exist in your home directory.
	# --volume=HOST_DIR:CONTAINER-DI
	if [ -d $HOME/$d ]; then
		run_args+=(--mount type=bind,src=$HOME/$d,dst=$container_home/$d)
	fi
done

if [[ $dockerfile = *.gosu ]]; then
	exec docker container run ${run_args[@]} $tag --user=$user --uid=$(id -u) --gid=$(id -g) -- "$@"
else
	exec docker container run ${run_args[@]} $tag "$@"
fi
